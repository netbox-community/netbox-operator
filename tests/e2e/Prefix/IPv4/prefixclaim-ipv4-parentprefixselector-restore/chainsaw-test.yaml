apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: prefixclaim-ipv4-parentprefixselector-restore
  annotations:
    description: Tests if creation, deletion and re-creation is successfully restoring the same Prefix when using parentPrefixSelector
spec:
  steps:
    - name: Apply CR 1
      try:
        - apply:
            file: netbox_v1_prefixclaim_1.yaml
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: PrefixClaim
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-1
              spec:
                comments: your comments
                description: some description
                parentPrefixSelector:
                  environment: Production
                  family: IPv4
                  poolName: Pool 2
                  site: MY_SITE
                  tenant: MY_TENANT
                prefixLength: /28
                preserveInNetbox: true
                site: MY_SITE_2
                tenant: MY_TENANT_2
              status:
                parentPrefix: 3.0.4.0/24
                prefix: 3.0.4.0/28
                prefixName: prefixclaim-ipv4-parentprefixselector-restore-1
    - name: Check CR 1 spec and status
      try:
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: Prefix
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-1
              spec:
                comments: your comments
                description: some description
                prefix: 3.0.4.0/28
                preserveInNetbox: true
                site: MY_SITE_2
                tenant: MY_TENANT_2
                customFields:
                  netboxOperatorRestorationHash: 8a5e15cd391ec02a7a2b2e316bc163f4fe46ef0b
    - name: Delete CR 1
      description: delete CR 1 (we only delete CR 1, so if the restoration failed to claim, it will take the next available prefix which will be wrong)
      try:
        - delete:
            ref:
              apiVersion: netbox.dev/v1
              kind: PrefixClaim
              name: prefixclaim-ipv4-parentprefixselector-restore-1
    - name: Apply CR 2
      try:
        - apply:
            file: netbox_v1_prefixclaim_2.yaml
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: PrefixClaim
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-2
              spec:
                comments: your comments
                description: some description
                parentPrefixSelector:
                  environment: Production
                  family: IPv4
                  poolName: Pool 2
                  site: MY_SITE
                  tenant: MY_TENANT
                prefixLength: /28
                site: MY_SITE_2
                tenant: MY_TENANT_2
              status:
                parentPrefix: 3.0.4.0/24
                prefix: 3.0.4.16/28
                prefixName: prefixclaim-ipv4-parentprefixselector-restore-2
    - name: Check CR 2 spec and status
      try:
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: Prefix
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-2
              spec:
                comments: your comments
                description: some description
                prefix: 3.0.4.16/28
                site: MY_SITE_2
                tenant: MY_TENANT_2
    - name: Apply CR 1 for the second time again
      try:
        - apply:
            file: netbox_v1_prefixclaim_1.yaml
    - name: Check CR 1 spec and status and make sure it is restored
      try:
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: PrefixClaim
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-1
              spec:
                comments: your comments
                description: some description
                parentPrefixSelector:
                  environment: Production
                  family: IPv4
                  poolName: Pool 2
                  site: MY_SITE
                  tenant: MY_TENANT
                prefixLength: /28
                preserveInNetbox: true
                site: MY_SITE_2
                tenant: MY_TENANT_2
              status:
                parentPrefix: Prefix restored from hash, cannot infer the parent prefix
                prefix: 3.0.4.0/28
                prefixName: prefixclaim-ipv4-parentprefixselector-restore-1
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: Prefix
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-1
              spec:
                comments: your comments
                description: some description
                prefix: 3.0.4.0/28
                preserveInNetbox: true
                site: MY_SITE_2
                tenant: MY_TENANT_2
                customFields:
                  netboxOperatorRestorationHash: 8a5e15cd391ec02a7a2b2e316bc163f4fe46ef0b
    - name: Set preserveInNetbox to false
      description: Set preserveInNetbox to false to clean up the NetBox test instance
      try:
        - patch:
            resource:
              apiVersion: netbox.dev/v1
              kind: PrefixClaim
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-1
              spec:
                preserveInNetbox: false
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: Prefix
              metadata:
                name: prefixclaim-ipv4-parentprefixselector-restore-1
              status:
                (conditions[?type == 'Ready']):
                  - observedGeneration: 2
                    status: 'True'
    - name: Cleanup events
      description: Events cleanup required to fix issues with failing tests that assert the wrong Error resource
      cleanup:
        - script:
            content: |
              kubectl delete events --field-selector involvedObject.name=prefixclaim-ipv4-parentprefixselector-restore-1 -n $NAMESPACE
              kubectl delete events --field-selector involvedObject.name=prefixclaim-ipv4-parentprefixselector-restore-2 -n $NAMESPACE
