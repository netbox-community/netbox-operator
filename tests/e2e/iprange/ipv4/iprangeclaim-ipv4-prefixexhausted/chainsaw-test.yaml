---
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: iprangeclaim-ipv4-prefixexhausted
  annotations:
    description: Tests if creation fails in case the ParentPrefix is exhausted
spec:
  steps:
    - name: Apply CR 1
      try:
        - apply:
            file: netbox_v1_iprangeclaim_1.yaml
    - name: Check CR 1 spec and status
      try:
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: IpRangeClaim
              metadata:
                name: iprangeclaim-ipv4-prefixexhausted-1
              spec:
                comments: your comments
                description: some description
                parentPrefix: 3.2.1.0/26
                size: 30
                tenant: MY_TENANT
              status:
                (conditions[?type == 'Ready']):
                  - status: 'True'
                endAddress: 3.2.1.30/32
                endAddressDotDecimal: 3.2.1.30
                ipRangeName: iprangeclaim-ipv4-prefixexhausted-1
                ipRange: 3.2.1.1/32-3.2.1.30/32
                ipRangeDotDecimal: 3.2.1.1-3.2.1.30
                startAddress: 3.2.1.1/32
                startAddressDotDecimal: 3.2.1.1
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: IpRange
              metadata:
                name: iprangeclaim-ipv4-prefixexhausted-1
                finalizers:
                  - iprange.netbox.dev/finalizer
                ownerReferences:
                  - apiVersion: netbox.dev/v1
                    blockOwnerDeletion: true
                    controller: true
                    kind: IpRangeClaim
                    name: iprangeclaim-ipv4-prefixexhausted-1
              spec:
                comments: your comments
                description: some description
                startAddress: 3.2.1.1/32
                tenant: MY_TENANT
              status:
                (conditions[?type == 'Ready']):
                  - status: 'True'
    - name: Apply CR 2
      try:
        - apply:
            file: netbox_v1_iprangeclaim_2.yaml
    - name: Check CR 2 spec and status
      try:
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: IpRangeClaim
              metadata:
                name: iprangeclaim-ipv4-prefixexhausted-2
              spec:
                comments: your comments
                description: some description
                parentPrefix: 3.2.1.0/26
                size: 30
                tenant: MY_TENANT
              status:
                (conditions[?type == 'Ready']):
                  - status: 'True'
                endAddress: 3.2.1.60/32
                endAddressDotDecimal: 3.2.1.60
                ipRangeName: iprangeclaim-ipv4-prefixexhausted-2
                ipRange: 3.2.1.31/32-3.2.1.60/32
                ipRangeDotDecimal: 3.2.1.31-3.2.1.60
                startAddress: 3.2.1.31/32
                startAddressDotDecimal: 3.2.1.31
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: IpRange
              metadata:
                name: iprangeclaim-ipv4-prefixexhausted-2
                finalizers:
                  - iprange.netbox.dev/finalizer
                ownerReferences:
                  - apiVersion: netbox.dev/v1
                    blockOwnerDeletion: true
                    controller: true
                    kind: IpRangeClaim
                    name: iprangeclaim-ipv4-prefixexhausted-2
              spec:
                comments: your comments
                description: some description
                startAddress: 3.2.1.31/32
                endAddress: 3.2.1.60/32
                tenant: MY_TENANT
              status:
                (conditions[?type == 'Ready']):
                  - status: 'True'
    - name: Apply CR 3
      try:
        - apply:
            file: netbox_v1_iprangeclaim_3.yaml
    - name: Check CR 3 spec and status and verify it fails
      try:
        - assert:
            resource:
              apiVersion: netbox.dev/v1
              kind: IpRangeClaim
              metadata:
                name: iprangeclaim-ipv4-prefixexhausted-3
              spec:
                comments: your comments
                description: some description
                parentPrefix: 3.2.1.0/26
                size: 30
                tenant: MY_TENANT
              status:
                (conditions[?type == 'IPRangeAssigned']):  # TODO(jstudler): Change this to Ready, will need change in SetConditionAndCreateEvent to also update Ready condition
                  - status: 'False'
        - assert:
            resource:
              apiVersion: v1
              kind: Event
              type: Warning
              reason: IPRangeCRNotCreated
              source:
                component: ip-range-claim-controller
              message: "Failed to fetch new IP Range from NetBox: not enough consecutive IPs available"
              involvedObject:
                apiVersion: netbox.dev/v1
                kind: IpRangeClaim
                name: iprangeclaim-ipv4-prefixexhausted-3
    - name: Cleanup events and leases
      description: Events cleanup required to fix issues with failing tests that assert the wrong Error resource and lease cleanup for preventing delays when using the same prefixes (e.g. with "invalid" tests)
      cleanup:
        - script:
            content: |-
              kubectl delete events --field-selector involvedObject.name=iprangeclaim-ipv4-prefixexhausted-1 -n $NAMESPACE
              kubectl delete events --field-selector involvedObject.name=iprangeclaim-ipv4-prefixexhausted-2 -n $NAMESPACE
              kubectl delete events --field-selector involvedObject.name=iprangeclaim-ipv4-prefixexhausted-3 -n $NAMESPACE
